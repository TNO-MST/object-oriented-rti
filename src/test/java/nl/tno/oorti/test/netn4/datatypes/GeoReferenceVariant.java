// This file was generated by the TNO Bean Generator.
// Any modifications to this file will be lost upon re-generation.
// Generated on: 2025/09/14 01:29:01

package nl.tno.oorti.test.netn4.datatypes;

import java.util.UUID;

/**
 * The area affected by an environmental condition can be expressed as: a location on the Earth's
 * surface represented by a Point, an area on the Earth's surface, represented by a Quadrangle,
 * GeodeticPolygon, or GeodeticCircle, order a reference to some other object/data.
 */
public class GeoReferenceVariant {

  /** Discriminant */
  GeoLocationTypeEnum32 GeoReferenceType;

  /** A location on the surface of the Earth defined by lat, lon WGS84. */
  GeodeticLocation GeodeticLocation;

  /**
   * A geodetic point and radius specifying a circle on the surface of the Earth WGS84 where the
   * radius is a great circle distance on the surface.
   */
  GeodeticCircle GeodeticCircle;

  /** A latitude-longitude quadrangle is a region bounded by two meridians and two parallels. */
  GeodeticQuadrangle GeodeticQuadrangle;

  /**
   * A polygon on the surface of the Earth defined by a number of great-circle arcs represented as
   * lat, lon Locations. WGS84.
   */
  GeodeticLocation[] GeodeticPolygon;

  /** Reference to a simulated entity. */
  UUID UUID;

  /**
   * Reference to an instance of a leaf node subclass of RPR-FOM BaseEntity by its EntityIdentifier.
   * E.g. an Aircraft, SurfaceVessel etc.
   */
  EntityIdentifierStruct RPREntityReference;

  /** Reference to a GML feature by its GML Identifier. */
  String GMLFeatureReference;

  public GeoLocationTypeEnum32 getGeoReferenceType() {
    return this.GeoReferenceType;
  }

  public void setGeoReferenceType(GeoLocationTypeEnum32 GeoReferenceType) {
    this.GeoReferenceType = GeoReferenceType;
  }

  public GeodeticLocation getGeodeticLocation() {
    return this.GeodeticLocation;
  }

  public void setGeodeticLocation(GeodeticLocation GeodeticLocation) {
    this.GeodeticLocation = GeodeticLocation;
  }

  public GeodeticCircle getGeodeticCircle() {
    return this.GeodeticCircle;
  }

  public void setGeodeticCircle(GeodeticCircle GeodeticCircle) {
    this.GeodeticCircle = GeodeticCircle;
  }

  public GeodeticQuadrangle getGeodeticQuadrangle() {
    return this.GeodeticQuadrangle;
  }

  public void setGeodeticQuadrangle(GeodeticQuadrangle GeodeticQuadrangle) {
    this.GeodeticQuadrangle = GeodeticQuadrangle;
  }

  public GeodeticLocation[] getGeodeticPolygon() {
    return this.GeodeticPolygon;
  }

  public void setGeodeticPolygon(GeodeticLocation[] GeodeticPolygon) {
    this.GeodeticPolygon = GeodeticPolygon;
  }

  public UUID getUUID() {
    return this.UUID;
  }

  public void setUUID(UUID UUID) {
    this.UUID = UUID;
  }

  public EntityIdentifierStruct getRPREntityReference() {
    return this.RPREntityReference;
  }

  public void setRPREntityReference(EntityIdentifierStruct RPREntityReference) {
    this.RPREntityReference = RPREntityReference;
  }

  public String getGMLFeatureReference() {
    return this.GMLFeatureReference;
  }

  public void setGMLFeatureReference(String GMLFeatureReference) {
    this.GMLFeatureReference = GMLFeatureReference;
  }
}
