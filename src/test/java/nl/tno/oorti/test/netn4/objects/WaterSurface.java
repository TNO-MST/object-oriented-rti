// This file was generated by the TNO Bean Generator.
// Any modifications to this file will be lost upon re-generation.
// Generated on: 2025/09/14 01:29:01

package nl.tno.oorti.test.netn4.objects;

import nl.tno.oorti.test.netn4.datatypes.CurrentStruct;
import nl.tno.oorti.test.netn4.datatypes.IceStruct;
import nl.tno.oorti.test.netn4.datatypes.SeaStateEnum16;
import nl.tno.oorti.test.netn4.datatypes.WaveStruct;

/** The `WaterSurface` object specifies the sea surface condition in the specified region. */
public class WaterSurface extends Weather {

  /**
   * Optional. State of the sea surface. The default is Calm_glassy. Use the last updated value if
   * overlapping regions/locations exist.
   */
  SeaStateEnum16 SeaState;

  /**
   * Optional. The salinity of seawater on the practical salinity scale 1978 (PSS-78). The default
   * value is 35 (equivalent to 35 parts per thousand). Use the average salinity if overlapping
   * regions/locations.
   */
  Float Salinity;

  /** Optional. The altitude of a water surface relative to MSL. The default is 0. */
  Float SurfaceAltitude;

  /**
   * Optional. Change in the normal altitude of the surface due to tide, surge, drought, flooding
   * etc. Default = 0.
   */
  Float Surge;

  /**
   * Optional. Ice condition on the surface. The default is no ice. Use the latest updated value if
   * overlapping regions/locations exist.
   */
  IceStruct Ice;

  /**
   * Optional. Current on the water surface. The default is no current. Ignored if the surface has
   * 100% Ice coverage. Use the average current direction and speed if overlapping regions/locations
   * exist.
   */
  CurrentStruct Current;

  /**
   * Optional. Waves on the water's surface. The default is no waves. Ignored if the surface has
   * 100% Ice coverage. Use the latest updated value if overlapping regions/locations exist.
   */
  WaveStruct Wave;

  /**
   * Optional. Swell of the body of water. The default is no Swell. Ignored if the surface has 100%
   * Ice coverage. Use the latest updated value if overlapping regions/locations exist.
   */
  WaveStruct Swell;

  /**
   * Optional: A degree of choppiness of the water surface ranging from 0% = no choppiness to 100% =
   * max choppy. Default = 0.
   */
  Float Choppiness;

  public SeaStateEnum16 getSeaState() {
    return this.SeaState;
  }

  public void setSeaState(SeaStateEnum16 SeaState) {
    this.SeaState = SeaState;
  }

  public Float getSalinity() {
    return this.Salinity;
  }

  public void setSalinity(Float Salinity) {
    this.Salinity = Salinity;
  }

  public Float getSurfaceAltitude() {
    return this.SurfaceAltitude;
  }

  public void setSurfaceAltitude(Float SurfaceAltitude) {
    this.SurfaceAltitude = SurfaceAltitude;
  }

  public Float getSurge() {
    return this.Surge;
  }

  public void setSurge(Float Surge) {
    this.Surge = Surge;
  }

  public IceStruct getIce() {
    return this.Ice;
  }

  public void setIce(IceStruct Ice) {
    this.Ice = Ice;
  }

  public CurrentStruct getCurrent() {
    return this.Current;
  }

  public void setCurrent(CurrentStruct Current) {
    this.Current = Current;
  }

  public WaveStruct getWave() {
    return this.Wave;
  }

  public void setWave(WaveStruct Wave) {
    this.Wave = Wave;
  }

  public WaveStruct getSwell() {
    return this.Swell;
  }

  public void setSwell(WaveStruct Swell) {
    this.Swell = Swell;
  }

  public Float getChoppiness() {
    return this.Choppiness;
  }

  public void setChoppiness(Float Choppiness) {
    this.Choppiness = Choppiness;
  }
}
