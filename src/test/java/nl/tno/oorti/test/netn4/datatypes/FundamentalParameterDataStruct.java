// This file was generated by the TNO Bean Generator.
// Any modifications to this file will be lost upon re-generation.
// Generated on: 2025/09/14 01:29:01

package nl.tno.oorti.test.netn4.datatypes;

/** Fundamental Parameter Data record. */
public class FundamentalParameterDataStruct {

  /** The average peak radiated power of the emission. */
  float ERP;

  /** The center frequency of the emission. */
  float Frequency;

  /**
   * When applied to originators, this field shall specify the number of interrogations per second
   * emitted. This field shall be set to zero when applied to a responder (i.e. transponder)
   * systems.
   */
  float PgRF;

  /** The duration of the fundamental pulse of which the interrogation or reply is composed. */
  float PulseWidth;

  /**
   * The number of emissions generated in a single burst. This field shall contain zero for
   * continuously emitting systems and shall contain the value 1 for responders.
   */
  int BurstLength;

  /** Specifies the modes to which the fundamental parameter data applies. */
  IffApplicableModesEnum8 ApplicableModes;

  /** Padding to 32 bits */
  byte[] Padding;

  public float getERP() {
    return this.ERP;
  }

  public void setERP(float ERP) {
    this.ERP = ERP;
  }

  public float getFrequency() {
    return this.Frequency;
  }

  public void setFrequency(float Frequency) {
    this.Frequency = Frequency;
  }

  public float getPgRF() {
    return this.PgRF;
  }

  public void setPgRF(float PgRF) {
    this.PgRF = PgRF;
  }

  public float getPulseWidth() {
    return this.PulseWidth;
  }

  public void setPulseWidth(float PulseWidth) {
    this.PulseWidth = PulseWidth;
  }

  public int getBurstLength() {
    return this.BurstLength;
  }

  public void setBurstLength(int BurstLength) {
    this.BurstLength = BurstLength;
  }

  public IffApplicableModesEnum8 getApplicableModes() {
    return this.ApplicableModes;
  }

  public void setApplicableModes(IffApplicableModesEnum8 ApplicableModes) {
    this.ApplicableModes = ApplicableModes;
  }

  public byte[] getPadding() {
    return this.Padding;
  }

  public void setPadding(byte[] Padding) {
    this.Padding = Padding;
  }
}
