// This file was generated by the TNO Bean Generator.
// Any modifications to this file will be lost upon re-generation.
// Generated on: 2025/09/14 01:29:01

package nl.tno.oorti.test.netn4.datatypes;

import java.util.UUID;

/**
 * Descripton of the observed entity. The symbol contains information about the spotted entity's
 * relation to the spotter and details about the type and echelon at the spotted entity.
 */
public class TrackStruct {

  /**
   * Unique identifier for a track. A new unique track id is generated if the sensor lose track of
   * the entity.
   */
  UUID Track;

  /** The unique identifier for the detected entity (ground truth) */
  UUID Entity;

  /** Required. The identification level of the tracked entity. */
  IdentificationLevelEnum8 IdentificationLevel;

  /**
   * Spotted equipment list, type and number.
   *
   * <p>Default value: Empty array.
   */
  DetectedEquipment[] Equipment;

  /** The location where the entity were spotted */
  WorldLocationStruct Location;

  /** The orientation in Psi, Theta, Phi [radians] */
  OrientationStruct Orientation;

  /**
   * The speed of the entity (m/s).
   *
   * <p>Default value: 0 m/s
   */
  float Speed;

  /** The current activity of the entity. (Fromm NETN-Base) Default value: Moving (213) */
  AggregateMissionEnum16 Activity;

  /**
   * Symbol identifier for the entity. The detailed level may vary and the publishing federate
   * decides the level of details in the symbol description. E.g. Default Ground value:
   * app6b:SUGP------***** Default Air value: app6b:SUAP------***** Default Sea Surface value:
   * app6b:SUSP------***** Default Subsurface value: app6b:SUUP------*****
   */
  String Symbol;

  public UUID getTrack() {
    return this.Track;
  }

  public void setTrack(UUID Track) {
    this.Track = Track;
  }

  public UUID getEntity() {
    return this.Entity;
  }

  public void setEntity(UUID Entity) {
    this.Entity = Entity;
  }

  public IdentificationLevelEnum8 getIdentificationLevel() {
    return this.IdentificationLevel;
  }

  public void setIdentificationLevel(IdentificationLevelEnum8 IdentificationLevel) {
    this.IdentificationLevel = IdentificationLevel;
  }

  public DetectedEquipment[] getEquipment() {
    return this.Equipment;
  }

  public void setEquipment(DetectedEquipment[] Equipment) {
    this.Equipment = Equipment;
  }

  public WorldLocationStruct getLocation() {
    return this.Location;
  }

  public void setLocation(WorldLocationStruct Location) {
    this.Location = Location;
  }

  public OrientationStruct getOrientation() {
    return this.Orientation;
  }

  public void setOrientation(OrientationStruct Orientation) {
    this.Orientation = Orientation;
  }

  public float getSpeed() {
    return this.Speed;
  }

  public void setSpeed(float Speed) {
    this.Speed = Speed;
  }

  public AggregateMissionEnum16 getActivity() {
    return this.Activity;
  }

  public void setActivity(AggregateMissionEnum16 Activity) {
    this.Activity = Activity;
  }

  public String getSymbol() {
    return this.Symbol;
  }

  public void setSymbol(String Symbol) {
    this.Symbol = Symbol;
  }
}
