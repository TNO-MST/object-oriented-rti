// This file was generated by the TNO Bean Generator.
// Any modifications to this file will be lost upon re-generation.
// Generated on: 2025/09/14 01:29:01

package nl.tno.oorti.test.netn4.interactions;

import nl.tno.oorti.test.netn4.datatypes.RoadIceConditionEnum16;
import nl.tno.oorti.test.netn4.datatypes.SnowStruct;
import nl.tno.oorti.test.netn4.datatypes.SurfaceMoistureEnum16;

/** Response with the condition for the land surface. */
public class LandSurfaceCondition extends WeatherCondition {

  /** Optional. Average snow depth and density in the region/location. */
  SnowStruct Snow;

  /** Optional. Maximum surface moisture in the region/location. */
  SurfaceMoistureEnum16 Moisture;

  /** Optional. The most severe ice conditions in the region/location. */
  RoadIceConditionEnum16 IceCondition;

  public SnowStruct getSnow() {
    return this.Snow;
  }

  public void setSnow(SnowStruct Snow) {
    this.Snow = Snow;
  }

  public SurfaceMoistureEnum16 getMoisture() {
    return this.Moisture;
  }

  public void setMoisture(SurfaceMoistureEnum16 Moisture) {
    this.Moisture = Moisture;
  }

  public RoadIceConditionEnum16 getIceCondition() {
    return this.IceCondition;
  }

  public void setIceCondition(RoadIceConditionEnum16 IceCondition) {
    this.IceCondition = IceCondition;
  }
}
