// This file was generated by the TNO Bean Generator.
// Any modifications to this file will be lost upon re-generation.
// Generated on: 2025/09/14 01:29:01

package nl.tno.oorti.test.netn4.objects;

import nl.tno.oorti.test.netn4.datatypes.PropulsionPlantEnum8;
import nl.tno.oorti.test.netn4.datatypes.RPRboolean;
import nl.tno.oorti.test.netn4.datatypes.ShaftDataStruct;

/**
 * Describes the steady state component of unintended passive emissions that are normally associated
 * with the power plant
 */
public class PropulsionNoise extends UnderwaterAcousticsEmission {

  /** Whether the hull masker silencing system is on. */
  RPRboolean HullMaskerOn;

  /** Database index to look up the entities acoustic signature */
  Short PassiveParameterIndex;

  /** The operating mode of the propulsion plant */
  PropulsionPlantEnum8 PropulsionPlantConfiguration;

  /**
   * Information about each of the propulsion shafts associated with the entity. Shafts are ordered
   * from port to starboard, when looking from the stern to the bow.
   */
  ShaftDataStruct[] ShaftRateData;

  public RPRboolean getHullMaskerOn() {
    return this.HullMaskerOn;
  }

  public void setHullMaskerOn(RPRboolean HullMaskerOn) {
    this.HullMaskerOn = HullMaskerOn;
  }

  public Short getPassiveParameterIndex() {
    return this.PassiveParameterIndex;
  }

  public void setPassiveParameterIndex(Short PassiveParameterIndex) {
    this.PassiveParameterIndex = PassiveParameterIndex;
  }

  public PropulsionPlantEnum8 getPropulsionPlantConfiguration() {
    return this.PropulsionPlantConfiguration;
  }

  public void setPropulsionPlantConfiguration(PropulsionPlantEnum8 PropulsionPlantConfiguration) {
    this.PropulsionPlantConfiguration = PropulsionPlantConfiguration;
  }

  public ShaftDataStruct[] getShaftRateData() {
    return this.ShaftRateData;
  }

  public void setShaftRateData(ShaftDataStruct[] ShaftRateData) {
    this.ShaftRateData = ShaftRateData;
  }
}
