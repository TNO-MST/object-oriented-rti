// This file was generated by the TNO Bean Generator.
// Any modifications to this file will be lost upon re-generation.
// Generated on: 2025/09/14 01:29:01

package nl.tno.oorti.test.netn4.objects;

import nl.tno.oorti.test.mim4.objects.HLAobjectRoot;
import nl.tno.oorti.test.netn4.datatypes.EntityIdentifierStruct;
import nl.tno.oorti.test.netn4.datatypes.EntityTypeStruct;
import nl.tno.oorti.test.netn4.datatypes.ForceIdentifierEnum8;
import nl.tno.oorti.test.netn4.datatypes.MinefieldLaneEnum8;
import nl.tno.oorti.test.netn4.datatypes.MinefieldProtocolEnum8;
import nl.tno.oorti.test.netn4.datatypes.MinefieldStatusEnum8;
import nl.tno.oorti.test.netn4.datatypes.MinefieldTypeEnum8;
import nl.tno.oorti.test.netn4.datatypes.OrientationStruct;
import nl.tno.oorti.test.netn4.datatypes.PerimeterPointStruct;
import nl.tno.oorti.test.netn4.datatypes.RPRboolean;
import nl.tno.oorti.test.netn4.datatypes.WorldLocationStruct;

/** An area of ground or water containing mines laid with or without a pattern. */
public class Minefield extends HLAobjectRoot {

  /** Specifies the active status of the minefield */
  MinefieldStatusEnum8 ActiveStatus;

  /** Identifies the force to which the minefield belongs */
  ForceIdentifierEnum8 ForceIdentifier;

  /** Specifies whether or not the minefield has an active lane */
  MinefieldLaneEnum8 Lane;

  /** Specifies the appearance information needed for displaying the symbology of the minefield */
  MinefieldTypeEnum8 MinefieldAppearanceType;

  /**
   * Uniquely identifies this minefield instance in association with the federate's site and
   * application
   */
  EntityIdentifierStruct MinefieldIdentifier;

  /** Specifies the location of the center of the minefield */
  WorldLocationStruct MinefieldLocation;

  /** Specifies the orientation of the minefield, with Euler angles */
  OrientationStruct MinefieldOrientation;

  /** Specifies the minefield type */
  EntityTypeStruct MinefieldType;

  /** Specifies the type of each mine contained within the minefield */
  EntityTypeStruct[] MineTypes;

  /** Specifies the location of each perimeter point, relative to the minefield location */
  PerimeterPointStruct[] PerimeterPointCoordinates;

  /**
   * Specifies the mode (Heartbeat or Query Response Protocol) being used to communicate data about
   * the minefield
   */
  MinefieldProtocolEnum8 ProtocolMode;

  /** Specifies whether or not the minefield has been deactivated */
  RPRboolean State;

  public MinefieldStatusEnum8 getActiveStatus() {
    return this.ActiveStatus;
  }

  public void setActiveStatus(MinefieldStatusEnum8 ActiveStatus) {
    this.ActiveStatus = ActiveStatus;
  }

  public ForceIdentifierEnum8 getForceIdentifier() {
    return this.ForceIdentifier;
  }

  public void setForceIdentifier(ForceIdentifierEnum8 ForceIdentifier) {
    this.ForceIdentifier = ForceIdentifier;
  }

  public MinefieldLaneEnum8 getLane() {
    return this.Lane;
  }

  public void setLane(MinefieldLaneEnum8 Lane) {
    this.Lane = Lane;
  }

  public MinefieldTypeEnum8 getMinefieldAppearanceType() {
    return this.MinefieldAppearanceType;
  }

  public void setMinefieldAppearanceType(MinefieldTypeEnum8 MinefieldAppearanceType) {
    this.MinefieldAppearanceType = MinefieldAppearanceType;
  }

  public EntityIdentifierStruct getMinefieldIdentifier() {
    return this.MinefieldIdentifier;
  }

  public void setMinefieldIdentifier(EntityIdentifierStruct MinefieldIdentifier) {
    this.MinefieldIdentifier = MinefieldIdentifier;
  }

  public WorldLocationStruct getMinefieldLocation() {
    return this.MinefieldLocation;
  }

  public void setMinefieldLocation(WorldLocationStruct MinefieldLocation) {
    this.MinefieldLocation = MinefieldLocation;
  }

  public OrientationStruct getMinefieldOrientation() {
    return this.MinefieldOrientation;
  }

  public void setMinefieldOrientation(OrientationStruct MinefieldOrientation) {
    this.MinefieldOrientation = MinefieldOrientation;
  }

  public EntityTypeStruct getMinefieldType() {
    return this.MinefieldType;
  }

  public void setMinefieldType(EntityTypeStruct MinefieldType) {
    this.MinefieldType = MinefieldType;
  }

  public EntityTypeStruct[] getMineTypes() {
    return this.MineTypes;
  }

  public void setMineTypes(EntityTypeStruct[] MineTypes) {
    this.MineTypes = MineTypes;
  }

  public PerimeterPointStruct[] getPerimeterPointCoordinates() {
    return this.PerimeterPointCoordinates;
  }

  public void setPerimeterPointCoordinates(PerimeterPointStruct[] PerimeterPointCoordinates) {
    this.PerimeterPointCoordinates = PerimeterPointCoordinates;
  }

  public MinefieldProtocolEnum8 getProtocolMode() {
    return this.ProtocolMode;
  }

  public void setProtocolMode(MinefieldProtocolEnum8 ProtocolMode) {
    this.ProtocolMode = ProtocolMode;
  }

  public RPRboolean getState() {
    return this.State;
  }

  public void setState(RPRboolean State) {
    this.State = State;
  }
}
