// This file was generated by the TNO Bean Generator.
// Any modifications to this file will be lost upon re-generation.
// Generated on: 2025/09/14 01:29:01

package nl.tno.oorti.test.netn4.interactions;

import nl.tno.oorti.test.netn4.datatypes.FormationStruct;
import nl.tno.oorti.test.netn4.datatypes.ResourceStatusStruct;
import nl.tno.oorti.test.netn4.datatypes.SupplyStatusStruct;

/**
 * Instructs a federate application to divide the `AggregateEntity` into multiple simulated
 * entities.
 */
public class Divide extends SMC_EntityControl {

  /** Optional. Amount of equipment of different type and health status to be divided. */
  ResourceStatusStruct[] Equipment;

  /** Optional. Amount of personnel of different type and health status to be divided. */
  ResourceStatusStruct[] Personnel;

  /** Optional. Amount of supplies to divide. */
  SupplyStatusStruct[] Supplies;

  /**
   * Optional. If true, all Equipment of type Platform and Lifeform are published as individual
   * objects in the federation.
   */
  Boolean RegisterPhysicalEntities;

  /** The formation of the divided units. */
  FormationStruct Formation;

  public ResourceStatusStruct[] getEquipment() {
    return this.Equipment;
  }

  public void setEquipment(ResourceStatusStruct[] Equipment) {
    this.Equipment = Equipment;
  }

  public ResourceStatusStruct[] getPersonnel() {
    return this.Personnel;
  }

  public void setPersonnel(ResourceStatusStruct[] Personnel) {
    this.Personnel = Personnel;
  }

  public SupplyStatusStruct[] getSupplies() {
    return this.Supplies;
  }

  public void setSupplies(SupplyStatusStruct[] Supplies) {
    this.Supplies = Supplies;
  }

  public Boolean getRegisterPhysicalEntities() {
    return this.RegisterPhysicalEntities;
  }

  public void setRegisterPhysicalEntities(Boolean RegisterPhysicalEntities) {
    this.RegisterPhysicalEntities = RegisterPhysicalEntities;
  }

  public FormationStruct getFormation() {
    return this.Formation;
  }

  public void setFormation(FormationStruct Formation) {
    this.Formation = Formation;
  }
}
