// This file was generated by the TNO Bean Generator.
// Any modifications to this file will be lost upon re-generation.
// Generated on: 2025/09/14 01:29:01

package nl.tno.oorti.test.netn4.interactions;

import nl.tno.oorti.test.netn4.datatypes.AidTypeEnum8;
import nl.tno.oorti.test.netn4.datatypes.GeodeticLocation;

/**
 * Message Type 21: Aid-to-Navigation Report.
 *
 * <p>Identification and location message to be emitted by aids to navigation such as buoys and
 * lighthouses.
 */
public class AisMessage21 extends AisMessage {

  /** Optional (Default: not specified). Type of aid. */
  AidTypeEnum8 AidType;

  /**
   * Optional (Default: 34 six-bit @ characters). Up to max 34 six-bit characters for the name of
   * the aid.
   */
  String Name;

  /** Optional (Default: not available). AIS (Lat,Lon) position. */
  GeodeticLocation Position;

  /** Optional (Default: not available). Distance from the bow. */
  Float DimensionBow;

  /** Optional (Default: not available). Distance from the stern. */
  Float DimensionStern;

  /** Optional (Default: not available). Distance from the port. */
  Float DimensionPort;

  /** Optional (Default: not available). Distance from starboard. */
  Float DimensionStarboard;

  /** Optional (Default: not available). Time of the report. */
  Integer UTCtime;

  /**
   * Optional (Default: false). Off-Position Indicator. The Off-Position Indicator is for floating
   * Aids-to-Navigation only: false means on position; true means off position. Only valid if
   * UTCsecond is available.
   */
  Boolean OffPositionFlag;

  /**
   * Optional (Default: false). Virtual-aid flag. The Virtual Aid flag is interpreted as follows:
   * false = real Aid to Navigation at the indicated position; true = virtual Aid to Navigation
   * simulated by nearby AIS station.
   */
  Boolean VirtualFlag;

  public AidTypeEnum8 getAidType() {
    return this.AidType;
  }

  public void setAidType(AidTypeEnum8 AidType) {
    this.AidType = AidType;
  }

  public String getName() {
    return this.Name;
  }

  public void setName(String Name) {
    this.Name = Name;
  }

  public GeodeticLocation getPosition() {
    return this.Position;
  }

  public void setPosition(GeodeticLocation Position) {
    this.Position = Position;
  }

  public Float getDimensionBow() {
    return this.DimensionBow;
  }

  public void setDimensionBow(Float DimensionBow) {
    this.DimensionBow = DimensionBow;
  }

  public Float getDimensionStern() {
    return this.DimensionStern;
  }

  public void setDimensionStern(Float DimensionStern) {
    this.DimensionStern = DimensionStern;
  }

  public Float getDimensionPort() {
    return this.DimensionPort;
  }

  public void setDimensionPort(Float DimensionPort) {
    this.DimensionPort = DimensionPort;
  }

  public Float getDimensionStarboard() {
    return this.DimensionStarboard;
  }

  public void setDimensionStarboard(Float DimensionStarboard) {
    this.DimensionStarboard = DimensionStarboard;
  }

  public Integer getUTCtime() {
    return this.UTCtime;
  }

  public void setUTCtime(Integer UTCtime) {
    this.UTCtime = UTCtime;
  }

  public Boolean getOffPositionFlag() {
    return this.OffPositionFlag;
  }

  public void setOffPositionFlag(Boolean OffPositionFlag) {
    this.OffPositionFlag = OffPositionFlag;
  }

  public Boolean getVirtualFlag() {
    return this.VirtualFlag;
  }

  public void setVirtualFlag(Boolean VirtualFlag) {
    this.VirtualFlag = VirtualFlag;
  }
}
