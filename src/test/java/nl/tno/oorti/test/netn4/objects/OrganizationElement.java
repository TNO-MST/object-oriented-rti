// This file was generated by the TNO Bean Generator.
// Any modifications to this file will be lost upon re-generation.
// Generated on: 2025/09/14 01:29:01

package nl.tno.oorti.test.netn4.objects;

import java.util.UUID;
import nl.tno.oorti.test.netn4.datatypes.EntityTypeStruct;
import nl.tno.oorti.test.netn4.datatypes.GeodeticPoint;
import nl.tno.oorti.test.netn4.datatypes.SymbolStruct;

/** An object class for all NETN-ORG organizational elements */
public class OrganizationElement extends ORG_Root {

  /** Required: A reference to the organization the element is affiliated with. */
  UUID Organization;

  /**
   * Required: A reference to a unit within the organization for which this element is a
   * subunit/equipment or controlled installation. The default value is all zeros (no aggregate
   * unit).
   */
  UUID SuperiorUnit;

  /** Required. SISO-REF-010 code for entity type definitions. If unknown, use 0.0.0.0.0.0.0. */
  EntityTypeStruct EntityType;

  /**
   * Required. Initial symbol identifier and amplification data for this element. In NETN-ORG the
   * symbol identifier acts as a template and may contain wildcard characters '*' to indicate
   * undefined elements of the symbol code.
   */
  SymbolStruct Symbol;

  /**
   * Optional. The geographic location of the element. Required if no `HostUnit` is provided. This
   * represents the initial location in the scenario unless otherwise modelled in the simulation.
   */
  GeodeticPoint Location;

  /**
   * Optional. A reference to a unit or equipment controlling the movement or operating an
   * installation. E.g. a unit embarked on a transport, or a helicopter on a ship. The default value
   * is all zeros, indicating that the unit is not embarked in or mounted on any other unit or
   * equipment. Not applicable to `Installation`.
   */
  UUID HostUnit;

  public UUID getOrganization() {
    return this.Organization;
  }

  public void setOrganization(UUID Organization) {
    this.Organization = Organization;
  }

  public UUID getSuperiorUnit() {
    return this.SuperiorUnit;
  }

  public void setSuperiorUnit(UUID SuperiorUnit) {
    this.SuperiorUnit = SuperiorUnit;
  }

  public EntityTypeStruct getEntityType() {
    return this.EntityType;
  }

  public void setEntityType(EntityTypeStruct EntityType) {
    this.EntityType = EntityType;
  }

  public SymbolStruct getSymbol() {
    return this.Symbol;
  }

  public void setSymbol(SymbolStruct Symbol) {
    this.Symbol = Symbol;
  }

  public GeodeticPoint getLocation() {
    return this.Location;
  }

  public void setLocation(GeodeticPoint Location) {
    this.Location = Location;
  }

  public UUID getHostUnit() {
    return this.HostUnit;
  }

  public void setHostUnit(UUID HostUnit) {
    this.HostUnit = HostUnit;
  }
}
