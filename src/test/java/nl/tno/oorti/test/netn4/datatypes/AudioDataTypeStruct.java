// This file was generated by the TNO Bean Generator.
// Any modifications to this file will be lost upon re-generation.
// Generated on: 2025/09/14 01:29:01

package nl.tno.oorti.test.netn4.datatypes;

/** Specifies an encoded audio radio signal. */
public class AudioDataTypeStruct {

  /** Identifier for the audio stream. This must be globally unique. */
  long StreamTag;

  /** The type of encoding used for the audio data */
  EncodingTypeEnum32 EncodingType;

  /** The number of samples per second in the audio data. */
  int SampleRate;

  /** The length of the signal data. */
  short DataLength;

  /** The number of samples in this transmission. */
  int SampleCount;

  /** The signal data. */
  byte[] Data;

  public long getStreamTag() {
    return this.StreamTag;
  }

  public void setStreamTag(long StreamTag) {
    this.StreamTag = StreamTag;
  }

  public EncodingTypeEnum32 getEncodingType() {
    return this.EncodingType;
  }

  public void setEncodingType(EncodingTypeEnum32 EncodingType) {
    this.EncodingType = EncodingType;
  }

  public int getSampleRate() {
    return this.SampleRate;
  }

  public void setSampleRate(int SampleRate) {
    this.SampleRate = SampleRate;
  }

  public short getDataLength() {
    return this.DataLength;
  }

  public void setDataLength(short DataLength) {
    this.DataLength = DataLength;
  }

  public int getSampleCount() {
    return this.SampleCount;
  }

  public void setSampleCount(int SampleCount) {
    this.SampleCount = SampleCount;
  }

  public byte[] getData() {
    return this.Data;
  }

  public void setData(byte[] Data) {
    this.Data = Data;
  }
}
