// This file was generated by the TNO Bean Generator.
// Any modifications to this file will be lost upon re-generation.
// Generated on: 2025/09/14 01:29:01

package nl.tno.oorti.test.netn4.objects;

import nl.tno.oorti.test.netn4.datatypes.AgentMassStruct;
import nl.tno.oorti.test.netn4.datatypes.HatchStateEnum32;
import nl.tno.oorti.test.netn4.datatypes.RPRboolean;

/**
 * A physical object under the control of armed forces upon which sensor, communication, or weapon
 * systems may be mounted.
 */
public class Platform extends PhysicalEntity {

  /** CBRN hazardous agent inside vehicle due to embedded units. */
  AgentMassStruct[] Contamination;

  /** Whether the entity's afterburner is on or not. */
  RPRboolean AfterburnerOn;

  /** Whether the entity's anti-collision lights are on or not. */
  RPRboolean AntiCollisionLightsOn;

  /** Whether the entity's black out brake lights are on or not. */
  RPRboolean BlackOutBrakeLightsOn;

  /** Whether the entity's black out lights are on or not. */
  RPRboolean BlackOutLightsOn;

  /** Whether the entity's brake lights are on or not. */
  RPRboolean BrakeLightsOn;

  /** Whether the entity's formation lights are on or not. */
  RPRboolean FormationLightsOn;

  /** The state of the entity's (main) hatch. */
  HatchStateEnum32 HatchState;

  /** Whether the entity's headlights are on or not. */
  RPRboolean HeadLightsOn;

  /** Whether the entity's internal lights are on or not. */
  RPRboolean InteriorLightsOn;

  /** Whether the entity's landing lights are on or not. */
  RPRboolean LandingLightsOn;

  /** Whether the entity's weapon launcher is in the raised position. */
  RPRboolean LauncherRaised;

  /** Whether the entity's navigation lights are on or not. */
  RPRboolean NavigationLightsOn;

  /** Whether the entity has deployed a ramp or not. */
  RPRboolean RampDeployed;

  /** Whether the entity's running lights are on or not. */
  RPRboolean RunningLightsOn;

  /** Whether the entity's spotlights are on or not. */
  RPRboolean SpotLightsOn;

  /** Whether the entity's tail lights are on or not. */
  RPRboolean TailLightsOn;

  public AgentMassStruct[] getContamination() {
    return this.Contamination;
  }

  public void setContamination(AgentMassStruct[] Contamination) {
    this.Contamination = Contamination;
  }

  public RPRboolean getAfterburnerOn() {
    return this.AfterburnerOn;
  }

  public void setAfterburnerOn(RPRboolean AfterburnerOn) {
    this.AfterburnerOn = AfterburnerOn;
  }

  public RPRboolean getAntiCollisionLightsOn() {
    return this.AntiCollisionLightsOn;
  }

  public void setAntiCollisionLightsOn(RPRboolean AntiCollisionLightsOn) {
    this.AntiCollisionLightsOn = AntiCollisionLightsOn;
  }

  public RPRboolean getBlackOutBrakeLightsOn() {
    return this.BlackOutBrakeLightsOn;
  }

  public void setBlackOutBrakeLightsOn(RPRboolean BlackOutBrakeLightsOn) {
    this.BlackOutBrakeLightsOn = BlackOutBrakeLightsOn;
  }

  public RPRboolean getBlackOutLightsOn() {
    return this.BlackOutLightsOn;
  }

  public void setBlackOutLightsOn(RPRboolean BlackOutLightsOn) {
    this.BlackOutLightsOn = BlackOutLightsOn;
  }

  public RPRboolean getBrakeLightsOn() {
    return this.BrakeLightsOn;
  }

  public void setBrakeLightsOn(RPRboolean BrakeLightsOn) {
    this.BrakeLightsOn = BrakeLightsOn;
  }

  public RPRboolean getFormationLightsOn() {
    return this.FormationLightsOn;
  }

  public void setFormationLightsOn(RPRboolean FormationLightsOn) {
    this.FormationLightsOn = FormationLightsOn;
  }

  public HatchStateEnum32 getHatchState() {
    return this.HatchState;
  }

  public void setHatchState(HatchStateEnum32 HatchState) {
    this.HatchState = HatchState;
  }

  public RPRboolean getHeadLightsOn() {
    return this.HeadLightsOn;
  }

  public void setHeadLightsOn(RPRboolean HeadLightsOn) {
    this.HeadLightsOn = HeadLightsOn;
  }

  public RPRboolean getInteriorLightsOn() {
    return this.InteriorLightsOn;
  }

  public void setInteriorLightsOn(RPRboolean InteriorLightsOn) {
    this.InteriorLightsOn = InteriorLightsOn;
  }

  public RPRboolean getLandingLightsOn() {
    return this.LandingLightsOn;
  }

  public void setLandingLightsOn(RPRboolean LandingLightsOn) {
    this.LandingLightsOn = LandingLightsOn;
  }

  public RPRboolean getLauncherRaised() {
    return this.LauncherRaised;
  }

  public void setLauncherRaised(RPRboolean LauncherRaised) {
    this.LauncherRaised = LauncherRaised;
  }

  public RPRboolean getNavigationLightsOn() {
    return this.NavigationLightsOn;
  }

  public void setNavigationLightsOn(RPRboolean NavigationLightsOn) {
    this.NavigationLightsOn = NavigationLightsOn;
  }

  public RPRboolean getRampDeployed() {
    return this.RampDeployed;
  }

  public void setRampDeployed(RPRboolean RampDeployed) {
    this.RampDeployed = RampDeployed;
  }

  public RPRboolean getRunningLightsOn() {
    return this.RunningLightsOn;
  }

  public void setRunningLightsOn(RPRboolean RunningLightsOn) {
    this.RunningLightsOn = RunningLightsOn;
  }

  public RPRboolean getSpotLightsOn() {
    return this.SpotLightsOn;
  }

  public void setSpotLightsOn(RPRboolean SpotLightsOn) {
    this.SpotLightsOn = SpotLightsOn;
  }

  public RPRboolean getTailLightsOn() {
    return this.TailLightsOn;
  }

  public void setTailLightsOn(RPRboolean TailLightsOn) {
    this.TailLightsOn = TailLightsOn;
  }
}
