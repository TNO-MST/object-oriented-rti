// This file was generated by the TNO Bean Generator.
// Any modifications to this file will be lost upon re-generation.
// Generated on: 2025/09/14 01:29:01

package nl.tno.oorti.test.netn4.datatypes;

/**
 * Specifies the direction, pattern, and polarization of radiation from a radio transmitter's
 * antenna.
 */
public class BeamAntennaStruct {

  /**
   * The rotation that transforms the reference coordinate system into the beam coordinate system.
   */
  OrientationStruct BeamOrientation;

  /**
   * The full width of the beam to the -3 dB power density points in the x-y plane of the beam
   * coordinate system.
   */
  float BeamAzimuthBeamwidth;

  /**
   * The full width of the beam to the -3 dB power density points in the x-z plane of the beam
   * coordinate system.
   */
  float BeamElevationBeamwidth;

  /** The reference coordinate system with respect to which beam direction is specified */
  ReferenceSystemEnum8 ReferenceSystem;

  /**
   * The magnitude of the Z-component (in beam coordinates) of the Electrical field at some
   * arbitrary single point in the mainbeam and in the far field of the antenna.
   */
  float Ez;

  /**
   * The magnitude of the X-component (in beam coordinates) of the Electrical field at some
   * arbitrary single point in the mainbeam and in the far field of the antenna
   */
  float Ex;

  /** The phase angle between Ez and Ex in radians. */
  float BeamPhaseAngle;

  public OrientationStruct getBeamOrientation() {
    return this.BeamOrientation;
  }

  public void setBeamOrientation(OrientationStruct BeamOrientation) {
    this.BeamOrientation = BeamOrientation;
  }

  public float getBeamAzimuthBeamwidth() {
    return this.BeamAzimuthBeamwidth;
  }

  public void setBeamAzimuthBeamwidth(float BeamAzimuthBeamwidth) {
    this.BeamAzimuthBeamwidth = BeamAzimuthBeamwidth;
  }

  public float getBeamElevationBeamwidth() {
    return this.BeamElevationBeamwidth;
  }

  public void setBeamElevationBeamwidth(float BeamElevationBeamwidth) {
    this.BeamElevationBeamwidth = BeamElevationBeamwidth;
  }

  public ReferenceSystemEnum8 getReferenceSystem() {
    return this.ReferenceSystem;
  }

  public void setReferenceSystem(ReferenceSystemEnum8 ReferenceSystem) {
    this.ReferenceSystem = ReferenceSystem;
  }

  public float getEz() {
    return this.Ez;
  }

  public void setEz(float Ez) {
    this.Ez = Ez;
  }

  public float getEx() {
    return this.Ex;
  }

  public void setEx(float Ex) {
    this.Ex = Ex;
  }

  public float getBeamPhaseAngle() {
    return this.BeamPhaseAngle;
  }

  public void setBeamPhaseAngle(float BeamPhaseAngle) {
    this.BeamPhaseAngle = BeamPhaseAngle;
  }
}
