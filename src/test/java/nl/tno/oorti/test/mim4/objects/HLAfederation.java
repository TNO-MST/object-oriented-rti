// This file was generated by the TNO Bean Generator.
// Any modifications to this file will be lost upon re-generation.
// Generated on: 2025/09/14 01:29:01

package nl.tno.oorti.test.mim4.objects;

import nl.tno.oorti.test.mim4.datatypes.HLAswitch;

/**
 * This object class shall contain RTI state variables relating to a federation execution. The RTI
 * shall publish it and shall register one object instance for the federation execution. The RTI
 * shall respond to the invocation, by any federate, of the Request Attribute Value Update service
 * for this object class or for any instance attribute of an object instance of this class by
 * supplying values via the normal instance attribute update mechanism, regardless of whether the
 * attribute has a data type of static or conditional. In addition to its responsibility to update
 * attributes of object instances of this class when those updates are explicitly requested, the RTI
 * shall automatically update instance attributes of object instances of this class according to the
 * update policy of the attribute, which is determined by the update type of the class attribute in
 * Table 6. Those attributes that have an update type of Conditional shall have update conditions as
 * defined in the Table 6.
 */
public class HLAfederation extends HLAmanager {

  /** Name of the federation to which the joined federate belongs */
  String HLAfederationName;

  /** Identifiers of joined federates that are joined to the federation */
  byte[][] HLAfederatesInFederation;

  /** Version of the RTI software */
  String HLARTIversion;

  /**
   * Designator associated with the MIM specified in the Create Federation Execution service
   * invocation. In case the RTI has supplied the standard MIM, the designator shall be
   * “HLAstandardMIM”.
   */
  String HLAMIMdesignator;

  /**
   * FOM Module designators for the federation as specified in the Create Federation Execution
   * service and Join Federation Execution invocations. If several identical FOM modules are
   * provided only the designator for the first of these FOM modules shall be added to the list.
   */
  String[] HLAFOMmoduleDesignatorList;

  /**
   * The Current FDD realized as a result of antecedent successful Create Federation Execution and
   * Join Federation Execution service invocations.
   */
  String HLAcurrentFDD;

  /**
   * Name of the time implementation as supplied to the Create Federation Execution service when the
   * federation was created.
   */
  String HLAtimeImplementationName;

  /** Name associated with the last federation state save (null if no saves have occurred) */
  String HLAlastSaveName;

  /**
   * Logical time at which the last federation state save occurred. If the last save was not a timed
   * save, then the HLAlastSaveTime attribute value shall be an empty (zero-length) HLAlogicalTime
   * array to indicate that the value of the HLAlastSaveTime attribute is undefined. If no timed
   * saves have occurred the value shall be an empty (zero-length) HLAlogicalTime array.
   */
  byte[] HLAlastSaveTime;

  /** Name associated with the next federation state save (null if no saves are scheduled) */
  String HLAnextSaveName;

  /**
   * Logical time at which the next federation state timed save is scheduled. If no timed saves are
   * scheduled the value shall be an empty (zero-length) HLAlogicalTime array.
   */
  byte[] HLAnextSaveTime;

  /** Value of federation-wide Auto-Provide Switch. Updated when value of switch changes */
  HLAswitch HLAautoProvide;

  public String getHLAfederationName() {
    return this.HLAfederationName;
  }

  public void setHLAfederationName(String HLAfederationName) {
    this.HLAfederationName = HLAfederationName;
  }

  public byte[][] getHLAfederatesInFederation() {
    return this.HLAfederatesInFederation;
  }

  public void setHLAfederatesInFederation(byte[][] HLAfederatesInFederation) {
    this.HLAfederatesInFederation = HLAfederatesInFederation;
  }

  public String getHLARTIversion() {
    return this.HLARTIversion;
  }

  public void setHLARTIversion(String HLARTIversion) {
    this.HLARTIversion = HLARTIversion;
  }

  public String getHLAMIMdesignator() {
    return this.HLAMIMdesignator;
  }

  public void setHLAMIMdesignator(String HLAMIMdesignator) {
    this.HLAMIMdesignator = HLAMIMdesignator;
  }

  public String[] getHLAFOMmoduleDesignatorList() {
    return this.HLAFOMmoduleDesignatorList;
  }

  public void setHLAFOMmoduleDesignatorList(String[] HLAFOMmoduleDesignatorList) {
    this.HLAFOMmoduleDesignatorList = HLAFOMmoduleDesignatorList;
  }

  public String getHLAcurrentFDD() {
    return this.HLAcurrentFDD;
  }

  public void setHLAcurrentFDD(String HLAcurrentFDD) {
    this.HLAcurrentFDD = HLAcurrentFDD;
  }

  public String getHLAtimeImplementationName() {
    return this.HLAtimeImplementationName;
  }

  public void setHLAtimeImplementationName(String HLAtimeImplementationName) {
    this.HLAtimeImplementationName = HLAtimeImplementationName;
  }

  public String getHLAlastSaveName() {
    return this.HLAlastSaveName;
  }

  public void setHLAlastSaveName(String HLAlastSaveName) {
    this.HLAlastSaveName = HLAlastSaveName;
  }

  public byte[] getHLAlastSaveTime() {
    return this.HLAlastSaveTime;
  }

  public void setHLAlastSaveTime(byte[] HLAlastSaveTime) {
    this.HLAlastSaveTime = HLAlastSaveTime;
  }

  public String getHLAnextSaveName() {
    return this.HLAnextSaveName;
  }

  public void setHLAnextSaveName(String HLAnextSaveName) {
    this.HLAnextSaveName = HLAnextSaveName;
  }

  public byte[] getHLAnextSaveTime() {
    return this.HLAnextSaveTime;
  }

  public void setHLAnextSaveTime(byte[] HLAnextSaveTime) {
    this.HLAnextSaveTime = HLAnextSaveTime;
  }

  public HLAswitch getHLAautoProvide() {
    return this.HLAautoProvide;
  }

  public void setHLAautoProvide(HLAswitch HLAautoProvide) {
    this.HLAautoProvide = HLAautoProvide;
  }
}
